name: Continuous Integration

on:
  push:
    branches: [ "feat/cl-response" ]
  workflow_dispatch:

#env:
  #SONAR_ORG: hypheni
  #SONAR_PROJ: go-bp-calc-k8s
  
jobs:
  integration:
    permissions:
      contents: read
      security-events: write

    runs-on: ubuntu-22.04

    steps:
      # Git checkout
      - name: Checkout
        uses: actions/checkout@v3
        
      # Install Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: subdir/go.sum
      
      # # Code compile
      # - name: Compile
      #   run: go build -v ./...
      
      # # Unit testing
      # - name: Unit Test
      #   run: go test -v -coverprofile=coverage.out ./...

      # # SAST analysis
      # - name: SonarCloud Analysis
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar
      # - uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     args:
      #       -Dsonar.projectKey=go-bp-calc-k8s
      #       -Dsonar.organization=hypheni
      #       -Dsonar.go.coverage.reportPaths=coverage.out
      #       -Dsonar.exclusions=**/*main.go,**/handlers.go,**/helpers.go,**/models.go,**/bpreading.go,**/routes.go,**/*_test.go

      # Synk Vulnarability Scan for Go Packages
      - name: Vulnerability Check with Synk
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
                --severity-threshold=high
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
